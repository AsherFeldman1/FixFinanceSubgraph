// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Deposit extends ethereum.Event {
  get params(): Deposit__Params {
    return new Deposit__Params(this);
  }
}

export class Deposit__Params {
  _event: Deposit;

  constructor(event: Deposit) {
    this._event = event;
  }

  get to(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get yieldDeposit(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get bondDeposit(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class MakeLimitSellYT extends ethereum.Event {
  get params(): MakeLimitSellYT__Params {
    return new MakeLimitSellYT__Params(this);
  }
}

export class MakeLimitSellYT__Params {
  _event: MakeLimitSellYT;

  constructor(event: MakeLimitSellYT) {
    this._event = event;
  }

  get maker(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get prevID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get newID(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get maturityConversionRate(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class MakeLimitSellZCB extends ethereum.Event {
  get params(): MakeLimitSellZCB__Params {
    return new MakeLimitSellZCB__Params(this);
  }
}

export class MakeLimitSellZCB__Params {
  _event: MakeLimitSellZCB;

  constructor(event: MakeLimitSellZCB) {
    this._event = event;
  }

  get maker(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get prevID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get newID(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get maturityConversionRate(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class MarketBuyYT extends ethereum.Event {
  get params(): MarketBuyYT__Params {
    return new MarketBuyYT__Params(this);
  }
}

export class MarketBuyYT__Params {
  _event: MarketBuyYT;

  constructor(event: MarketBuyYT) {
    this._event = event;
  }

  get taker(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newYTSellHeadID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get headAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class MarketBuyZCB extends ethereum.Event {
  get params(): MarketBuyZCB__Params {
    return new MarketBuyZCB__Params(this);
  }
}

export class MarketBuyZCB__Params {
  _event: MarketBuyZCB;

  constructor(event: MarketBuyZCB) {
    this._event = event;
  }

  get taker(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newZCBSellHeadID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get headAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ModifyOrder extends ethereum.Event {
  get params(): ModifyOrder__Params {
    return new ModifyOrder__Params(this);
  }
}

export class ModifyOrder__Params {
  _event: ModifyOrder;

  constructor(event: ModifyOrder) {
    this._event = event;
  }

  get orderID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get change(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Withdrawal extends ethereum.Event {
  get params(): Withdrawal__Params {
    return new Withdrawal__Params(this);
  }
}

export class Withdrawal__Params {
  _event: Withdrawal;

  constructor(event: Withdrawal) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get yieldWithdrawn(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get bondWithdrawn(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OrderbookExchange__marketBuyYTResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class OrderbookExchange__marketSellYTResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class OrderbookExchange__marketBuyZCBResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class OrderbookExchange__marketSellZCBResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class OrderbookExchange__marketSellZCBtoUResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class OrderbookExchange__marketSellUnitYTtoUResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class OrderbookExchange__getOracleDataResult {
  value0: Array<BigInt>;
  value1: BigInt;
  value2: BigInt;
  value3: i32;

  constructor(
    value0: Array<BigInt>,
    value1: BigInt,
    value2: BigInt,
    value3: i32
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigIntArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set(
      "value3",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value3))
    );
    return map;
  }
}

export class OrderbookExchange__YTSellsResult {
  value0: Address;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: Address, value1: BigInt, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }
}

export class OrderbookExchange__ZCBSellsResult {
  value0: Address;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: Address, value1: BigInt, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }
}

export class OrderbookExchange extends ethereum.SmartContract {
  static bind(address: Address): OrderbookExchange {
    return new OrderbookExchange("OrderbookExchange", address);
  }

  modifyZCBLimitSell(
    _amount: BigInt,
    _targetID: BigInt,
    _hintID: BigInt,
    _maxSteps: BigInt,
    _removeBelowMin: boolean
  ): BigInt {
    let result = super.call(
      "modifyZCBLimitSell",
      "modifyZCBLimitSell(int256,uint256,uint256,uint256,bool):(int256)",
      [
        ethereum.Value.fromSignedBigInt(_amount),
        ethereum.Value.fromUnsignedBigInt(_targetID),
        ethereum.Value.fromUnsignedBigInt(_hintID),
        ethereum.Value.fromUnsignedBigInt(_maxSteps),
        ethereum.Value.fromBoolean(_removeBelowMin)
      ]
    );

    return result[0].toBigInt();
  }

  try_modifyZCBLimitSell(
    _amount: BigInt,
    _targetID: BigInt,
    _hintID: BigInt,
    _maxSteps: BigInt,
    _removeBelowMin: boolean
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "modifyZCBLimitSell",
      "modifyZCBLimitSell(int256,uint256,uint256,uint256,bool):(int256)",
      [
        ethereum.Value.fromSignedBigInt(_amount),
        ethereum.Value.fromUnsignedBigInt(_targetID),
        ethereum.Value.fromUnsignedBigInt(_hintID),
        ethereum.Value.fromUnsignedBigInt(_maxSteps),
        ethereum.Value.fromBoolean(_removeBelowMin)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  modifyYTLimitSell(
    _amount: BigInt,
    _targetID: BigInt,
    _hintID: BigInt,
    _maxSteps: BigInt,
    _removeBelowMin: boolean
  ): BigInt {
    let result = super.call(
      "modifyYTLimitSell",
      "modifyYTLimitSell(int256,uint256,uint256,uint256,bool):(int256)",
      [
        ethereum.Value.fromSignedBigInt(_amount),
        ethereum.Value.fromUnsignedBigInt(_targetID),
        ethereum.Value.fromUnsignedBigInt(_hintID),
        ethereum.Value.fromUnsignedBigInt(_maxSteps),
        ethereum.Value.fromBoolean(_removeBelowMin)
      ]
    );

    return result[0].toBigInt();
  }

  try_modifyYTLimitSell(
    _amount: BigInt,
    _targetID: BigInt,
    _hintID: BigInt,
    _maxSteps: BigInt,
    _removeBelowMin: boolean
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "modifyYTLimitSell",
      "modifyYTLimitSell(int256,uint256,uint256,uint256,bool):(int256)",
      [
        ethereum.Value.fromSignedBigInt(_amount),
        ethereum.Value.fromUnsignedBigInt(_targetID),
        ethereum.Value.fromUnsignedBigInt(_hintID),
        ethereum.Value.fromUnsignedBigInt(_maxSteps),
        ethereum.Value.fromBoolean(_removeBelowMin)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  marketBuyYT(
    _amountYT: BigInt,
    _maxMaturityConversionRate: BigInt,
    _maxCumulativeMaturityConversionRate: BigInt,
    _maxIterations: i32,
    _useInternalBalances: boolean
  ): OrderbookExchange__marketBuyYTResult {
    let result = super.call(
      "marketBuyYT",
      "marketBuyYT(uint256,uint256,uint256,uint16,bool):(uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_amountYT),
        ethereum.Value.fromUnsignedBigInt(_maxMaturityConversionRate),
        ethereum.Value.fromUnsignedBigInt(_maxCumulativeMaturityConversionRate),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_maxIterations)),
        ethereum.Value.fromBoolean(_useInternalBalances)
      ]
    );

    return new OrderbookExchange__marketBuyYTResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_marketBuyYT(
    _amountYT: BigInt,
    _maxMaturityConversionRate: BigInt,
    _maxCumulativeMaturityConversionRate: BigInt,
    _maxIterations: i32,
    _useInternalBalances: boolean
  ): ethereum.CallResult<OrderbookExchange__marketBuyYTResult> {
    let result = super.tryCall(
      "marketBuyYT",
      "marketBuyYT(uint256,uint256,uint256,uint16,bool):(uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_amountYT),
        ethereum.Value.fromUnsignedBigInt(_maxMaturityConversionRate),
        ethereum.Value.fromUnsignedBigInt(_maxCumulativeMaturityConversionRate),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_maxIterations)),
        ethereum.Value.fromBoolean(_useInternalBalances)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new OrderbookExchange__marketBuyYTResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  marketSellYT(
    _amountYT: BigInt,
    _minMaturityConversionRate: BigInt,
    _minCumulativeMaturityConversionRate: BigInt,
    _maxIterations: i32,
    _useInternalBalances: boolean
  ): OrderbookExchange__marketSellYTResult {
    let result = super.call(
      "marketSellYT",
      "marketSellYT(uint256,uint256,uint256,uint16,bool):(uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_amountYT),
        ethereum.Value.fromUnsignedBigInt(_minMaturityConversionRate),
        ethereum.Value.fromUnsignedBigInt(_minCumulativeMaturityConversionRate),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_maxIterations)),
        ethereum.Value.fromBoolean(_useInternalBalances)
      ]
    );

    return new OrderbookExchange__marketSellYTResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_marketSellYT(
    _amountYT: BigInt,
    _minMaturityConversionRate: BigInt,
    _minCumulativeMaturityConversionRate: BigInt,
    _maxIterations: i32,
    _useInternalBalances: boolean
  ): ethereum.CallResult<OrderbookExchange__marketSellYTResult> {
    let result = super.tryCall(
      "marketSellYT",
      "marketSellYT(uint256,uint256,uint256,uint16,bool):(uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_amountYT),
        ethereum.Value.fromUnsignedBigInt(_minMaturityConversionRate),
        ethereum.Value.fromUnsignedBigInt(_minCumulativeMaturityConversionRate),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_maxIterations)),
        ethereum.Value.fromBoolean(_useInternalBalances)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new OrderbookExchange__marketSellYTResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  marketBuyZCB(
    _amountZCB: BigInt,
    _minMaturityConversionRate: BigInt,
    _minCumulativeMaturityConversionRate: BigInt,
    _maxIterations: i32,
    _useInternalBalances: boolean
  ): OrderbookExchange__marketBuyZCBResult {
    let result = super.call(
      "marketBuyZCB",
      "marketBuyZCB(uint256,uint256,uint256,uint16,bool):(uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_amountZCB),
        ethereum.Value.fromUnsignedBigInt(_minMaturityConversionRate),
        ethereum.Value.fromUnsignedBigInt(_minCumulativeMaturityConversionRate),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_maxIterations)),
        ethereum.Value.fromBoolean(_useInternalBalances)
      ]
    );

    return new OrderbookExchange__marketBuyZCBResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_marketBuyZCB(
    _amountZCB: BigInt,
    _minMaturityConversionRate: BigInt,
    _minCumulativeMaturityConversionRate: BigInt,
    _maxIterations: i32,
    _useInternalBalances: boolean
  ): ethereum.CallResult<OrderbookExchange__marketBuyZCBResult> {
    let result = super.tryCall(
      "marketBuyZCB",
      "marketBuyZCB(uint256,uint256,uint256,uint16,bool):(uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_amountZCB),
        ethereum.Value.fromUnsignedBigInt(_minMaturityConversionRate),
        ethereum.Value.fromUnsignedBigInt(_minCumulativeMaturityConversionRate),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_maxIterations)),
        ethereum.Value.fromBoolean(_useInternalBalances)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new OrderbookExchange__marketBuyZCBResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  marketSellZCB(
    _amountZCB: BigInt,
    _maxMaturityConversionRate: BigInt,
    _maxCumulativeMaturityConversionRate: BigInt,
    _maxIterations: i32,
    _useInternalBalances: boolean
  ): OrderbookExchange__marketSellZCBResult {
    let result = super.call(
      "marketSellZCB",
      "marketSellZCB(uint256,uint256,uint256,uint16,bool):(uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_amountZCB),
        ethereum.Value.fromUnsignedBigInt(_maxMaturityConversionRate),
        ethereum.Value.fromUnsignedBigInt(_maxCumulativeMaturityConversionRate),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_maxIterations)),
        ethereum.Value.fromBoolean(_useInternalBalances)
      ]
    );

    return new OrderbookExchange__marketSellZCBResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_marketSellZCB(
    _amountZCB: BigInt,
    _maxMaturityConversionRate: BigInt,
    _maxCumulativeMaturityConversionRate: BigInt,
    _maxIterations: i32,
    _useInternalBalances: boolean
  ): ethereum.CallResult<OrderbookExchange__marketSellZCBResult> {
    let result = super.tryCall(
      "marketSellZCB",
      "marketSellZCB(uint256,uint256,uint256,uint16,bool):(uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_amountZCB),
        ethereum.Value.fromUnsignedBigInt(_maxMaturityConversionRate),
        ethereum.Value.fromUnsignedBigInt(_maxCumulativeMaturityConversionRate),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_maxIterations)),
        ethereum.Value.fromBoolean(_useInternalBalances)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new OrderbookExchange__marketSellZCBResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  marketSellZCBtoU(
    _amountZCB: BigInt,
    _maxMaturityConversionRate: BigInt,
    _maxCumulativeMaturityConversionRate: BigInt,
    _maxIterations: i32,
    _useInternalBalances: boolean
  ): OrderbookExchange__marketSellZCBtoUResult {
    let result = super.call(
      "marketSellZCBtoU",
      "marketSellZCBtoU(uint256,uint256,uint256,uint16,bool):(uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_amountZCB),
        ethereum.Value.fromUnsignedBigInt(_maxMaturityConversionRate),
        ethereum.Value.fromUnsignedBigInt(_maxCumulativeMaturityConversionRate),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_maxIterations)),
        ethereum.Value.fromBoolean(_useInternalBalances)
      ]
    );

    return new OrderbookExchange__marketSellZCBtoUResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_marketSellZCBtoU(
    _amountZCB: BigInt,
    _maxMaturityConversionRate: BigInt,
    _maxCumulativeMaturityConversionRate: BigInt,
    _maxIterations: i32,
    _useInternalBalances: boolean
  ): ethereum.CallResult<OrderbookExchange__marketSellZCBtoUResult> {
    let result = super.tryCall(
      "marketSellZCBtoU",
      "marketSellZCBtoU(uint256,uint256,uint256,uint16,bool):(uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_amountZCB),
        ethereum.Value.fromUnsignedBigInt(_maxMaturityConversionRate),
        ethereum.Value.fromUnsignedBigInt(_maxCumulativeMaturityConversionRate),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_maxIterations)),
        ethereum.Value.fromBoolean(_useInternalBalances)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new OrderbookExchange__marketSellZCBtoUResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  marketSellUnitYTtoU(
    _unitAmountYT: BigInt,
    _minMaturityConversionRate: BigInt,
    _minCumulativeMaturityConversionRate: BigInt,
    _maxIterations: i32,
    _useInternalBalances: boolean
  ): OrderbookExchange__marketSellUnitYTtoUResult {
    let result = super.call(
      "marketSellUnitYTtoU",
      "marketSellUnitYTtoU(uint256,uint256,uint256,uint16,bool):(uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_unitAmountYT),
        ethereum.Value.fromUnsignedBigInt(_minMaturityConversionRate),
        ethereum.Value.fromUnsignedBigInt(_minCumulativeMaturityConversionRate),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_maxIterations)),
        ethereum.Value.fromBoolean(_useInternalBalances)
      ]
    );

    return new OrderbookExchange__marketSellUnitYTtoUResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_marketSellUnitYTtoU(
    _unitAmountYT: BigInt,
    _minMaturityConversionRate: BigInt,
    _minCumulativeMaturityConversionRate: BigInt,
    _maxIterations: i32,
    _useInternalBalances: boolean
  ): ethereum.CallResult<OrderbookExchange__marketSellUnitYTtoUResult> {
    let result = super.tryCall(
      "marketSellUnitYTtoU",
      "marketSellUnitYTtoU(uint256,uint256,uint256,uint16,bool):(uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_unitAmountYT),
        ethereum.Value.fromUnsignedBigInt(_minMaturityConversionRate),
        ethereum.Value.fromUnsignedBigInt(_minCumulativeMaturityConversionRate),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_maxIterations)),
        ethereum.Value.fromBoolean(_useInternalBalances)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new OrderbookExchange__marketSellUnitYTtoUResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  impliedYieldToMaturity(): BigInt {
    let result = super.call(
      "impliedYieldToMaturity",
      "impliedYieldToMaturity():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_impliedYieldToMaturity(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "impliedYieldToMaturity",
      "impliedYieldToMaturity():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAPYFromOracle(): BigInt {
    let result = super.call(
      "getAPYFromOracle",
      "getAPYFromOracle():(int128)",
      []
    );

    return result[0].toBigInt();
  }

  try_getAPYFromOracle(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getAPYFromOracle",
      "getAPYFromOracle():(int128)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getImpliedMCRFromOracle(): BigInt {
    let result = super.call(
      "getImpliedMCRFromOracle",
      "getImpliedMCRFromOracle():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getImpliedMCRFromOracle(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getImpliedMCRFromOracle",
      "getImpliedMCRFromOracle():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getOracleData(): OrderbookExchange__getOracleDataResult {
    let result = super.call(
      "getOracleData",
      "getOracleData():(uint256[31],uint256,uint256,uint8)",
      []
    );

    return new OrderbookExchange__getOracleDataResult(
      result[0].toBigIntArray(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toI32()
    );
  }

  try_getOracleData(): ethereum.CallResult<
    OrderbookExchange__getOracleDataResult
  > {
    let result = super.tryCall(
      "getOracleData",
      "getOracleData():(uint256[31],uint256,uint256,uint8)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new OrderbookExchange__getOracleDataResult(
        value[0].toBigIntArray(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toI32()
      )
    );
  }

  YieldDeposited(_depositor: Address): BigInt {
    let result = super.call(
      "YieldDeposited",
      "YieldDeposited(address):(uint256)",
      [ethereum.Value.fromAddress(_depositor)]
    );

    return result[0].toBigInt();
  }

  try_YieldDeposited(_depositor: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "YieldDeposited",
      "YieldDeposited(address):(uint256)",
      [ethereum.Value.fromAddress(_depositor)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  BondDeposited(_depositor: Address): BigInt {
    let result = super.call(
      "BondDeposited",
      "BondDeposited(address):(int256)",
      [ethereum.Value.fromAddress(_depositor)]
    );

    return result[0].toBigInt();
  }

  try_BondDeposited(_depositor: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "BondDeposited",
      "BondDeposited(address):(int256)",
      [ethereum.Value.fromAddress(_depositor)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  lockedYT(_depositor: Address): BigInt {
    let result = super.call("lockedYT", "lockedYT(address):(uint256)", [
      ethereum.Value.fromAddress(_depositor)
    ]);

    return result[0].toBigInt();
  }

  try_lockedYT(_depositor: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("lockedYT", "lockedYT(address):(uint256)", [
      ethereum.Value.fromAddress(_depositor)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  lockedZCB(_depositor: Address): BigInt {
    let result = super.call("lockedZCB", "lockedZCB(address):(uint256)", [
      ethereum.Value.fromAddress(_depositor)
    ]);

    return result[0].toBigInt();
  }

  try_lockedZCB(_depositor: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("lockedZCB", "lockedZCB(address):(uint256)", [
      ethereum.Value.fromAddress(_depositor)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  YTSells(_ID: BigInt): OrderbookExchange__YTSellsResult {
    let result = super.call(
      "YTSells",
      "YTSells(uint256):(address,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_ID)]
    );

    return new OrderbookExchange__YTSellsResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt()
    );
  }

  try_YTSells(
    _ID: BigInt
  ): ethereum.CallResult<OrderbookExchange__YTSellsResult> {
    let result = super.tryCall(
      "YTSells",
      "YTSells(uint256):(address,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_ID)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new OrderbookExchange__YTSellsResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt()
      )
    );
  }

  ZCBSells(_ID: BigInt): OrderbookExchange__ZCBSellsResult {
    let result = super.call(
      "ZCBSells",
      "ZCBSells(uint256):(address,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_ID)]
    );

    return new OrderbookExchange__ZCBSellsResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt()
    );
  }

  try_ZCBSells(
    _ID: BigInt
  ): ethereum.CallResult<OrderbookExchange__ZCBSellsResult> {
    let result = super.tryCall(
      "ZCBSells",
      "ZCBSells(uint256):(address,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_ID)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new OrderbookExchange__ZCBSellsResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt()
      )
    );
  }

  headYTSellID(): BigInt {
    let result = super.call("headYTSellID", "headYTSellID():(uint256)", []);

    return result[0].toBigInt();
  }

  try_headYTSellID(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("headYTSellID", "headYTSellID():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  headZCBSellID(): BigInt {
    let result = super.call("headZCBSellID", "headZCBSellID():(uint256)", []);

    return result[0].toBigInt();
  }

  try_headZCBSellID(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "headZCBSellID",
      "headZCBSellID():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  FCP(): Address {
    let result = super.call("FCP", "FCP():(address)", []);

    return result[0].toAddress();
  }

  try_FCP(): ethereum.CallResult<Address> {
    let result = super.tryCall("FCP", "FCP():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  IORC(): Address {
    let result = super.call("IORC", "IORC():(address)", []);

    return result[0].toAddress();
  }

  try_IORC(): ethereum.CallResult<Address> {
    let result = super.tryCall("IORC", "IORC():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  wrapper(): Address {
    let result = super.call("wrapper", "wrapper():(address)", []);

    return result[0].toAddress();
  }

  try_wrapper(): ethereum.CallResult<Address> {
    let result = super.tryCall("wrapper", "wrapper():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  maturity(): BigInt {
    let result = super.call("maturity", "maturity():(uint40)", []);

    return result[0].toBigInt();
  }

  try_maturity(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("maturity", "maturity():(uint40)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getMinimumOrderSize(): BigInt {
    let result = super.call(
      "getMinimumOrderSize",
      "getMinimumOrderSize():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getMinimumOrderSize(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getMinimumOrderSize",
      "getMinimumOrderSize():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getMinimumOrderSizeMode(): i32 {
    let result = super.call(
      "getMinimumOrderSizeMode",
      "getMinimumOrderSizeMode():(uint8)",
      []
    );

    return result[0].toI32();
  }

  try_getMinimumOrderSizeMode(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "getMinimumOrderSizeMode",
      "getMinimumOrderSizeMode():(uint8)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _FCPaddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _infoOracleAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _delegate1Address(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _delegate2Address(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _delegate3Address(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get _amountYield(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _amountBond(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get _amountYield(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _amountBond(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}

export class LimitSellZCBCall extends ethereum.Call {
  get inputs(): LimitSellZCBCall__Inputs {
    return new LimitSellZCBCall__Inputs(this);
  }

  get outputs(): LimitSellZCBCall__Outputs {
    return new LimitSellZCBCall__Outputs(this);
  }
}

export class LimitSellZCBCall__Inputs {
  _call: LimitSellZCBCall;

  constructor(call: LimitSellZCBCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _maturityConversionRate(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _hintID(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _maxSteps(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class LimitSellZCBCall__Outputs {
  _call: LimitSellZCBCall;

  constructor(call: LimitSellZCBCall) {
    this._call = call;
  }
}

export class LimitSellYTCall extends ethereum.Call {
  get inputs(): LimitSellYTCall__Inputs {
    return new LimitSellYTCall__Inputs(this);
  }

  get outputs(): LimitSellYTCall__Outputs {
    return new LimitSellYTCall__Outputs(this);
  }
}

export class LimitSellYTCall__Inputs {
  _call: LimitSellYTCall;

  constructor(call: LimitSellYTCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _maturityConversionRate(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _hintID(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _maxSteps(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class LimitSellYTCall__Outputs {
  _call: LimitSellYTCall;

  constructor(call: LimitSellYTCall) {
    this._call = call;
  }
}

export class ModifyZCBLimitSellCall extends ethereum.Call {
  get inputs(): ModifyZCBLimitSellCall__Inputs {
    return new ModifyZCBLimitSellCall__Inputs(this);
  }

  get outputs(): ModifyZCBLimitSellCall__Outputs {
    return new ModifyZCBLimitSellCall__Outputs(this);
  }
}

export class ModifyZCBLimitSellCall__Inputs {
  _call: ModifyZCBLimitSellCall;

  constructor(call: ModifyZCBLimitSellCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _targetID(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _hintID(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _maxSteps(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _removeBelowMin(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }
}

export class ModifyZCBLimitSellCall__Outputs {
  _call: ModifyZCBLimitSellCall;

  constructor(call: ModifyZCBLimitSellCall) {
    this._call = call;
  }

  get change(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ModifyYTLimitSellCall extends ethereum.Call {
  get inputs(): ModifyYTLimitSellCall__Inputs {
    return new ModifyYTLimitSellCall__Inputs(this);
  }

  get outputs(): ModifyYTLimitSellCall__Outputs {
    return new ModifyYTLimitSellCall__Outputs(this);
  }
}

export class ModifyYTLimitSellCall__Inputs {
  _call: ModifyYTLimitSellCall;

  constructor(call: ModifyYTLimitSellCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _targetID(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _hintID(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _maxSteps(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _removeBelowMin(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }
}

export class ModifyYTLimitSellCall__Outputs {
  _call: ModifyYTLimitSellCall;

  constructor(call: ModifyYTLimitSellCall) {
    this._call = call;
  }

  get change(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class MarketBuyYTCall extends ethereum.Call {
  get inputs(): MarketBuyYTCall__Inputs {
    return new MarketBuyYTCall__Inputs(this);
  }

  get outputs(): MarketBuyYTCall__Outputs {
    return new MarketBuyYTCall__Outputs(this);
  }
}

export class MarketBuyYTCall__Inputs {
  _call: MarketBuyYTCall;

  constructor(call: MarketBuyYTCall) {
    this._call = call;
  }

  get _amountYT(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _maxMaturityConversionRate(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _maxCumulativeMaturityConversionRate(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _maxIterations(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get _useInternalBalances(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }
}

export class MarketBuyYTCall__Outputs {
  _call: MarketBuyYTCall;

  constructor(call: MarketBuyYTCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get value1(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }
}

export class MarketSellYTCall extends ethereum.Call {
  get inputs(): MarketSellYTCall__Inputs {
    return new MarketSellYTCall__Inputs(this);
  }

  get outputs(): MarketSellYTCall__Outputs {
    return new MarketSellYTCall__Outputs(this);
  }
}

export class MarketSellYTCall__Inputs {
  _call: MarketSellYTCall;

  constructor(call: MarketSellYTCall) {
    this._call = call;
  }

  get _amountYT(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _minMaturityConversionRate(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _minCumulativeMaturityConversionRate(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _maxIterations(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get _useInternalBalances(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }
}

export class MarketSellYTCall__Outputs {
  _call: MarketSellYTCall;

  constructor(call: MarketSellYTCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get value1(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }
}

export class MarketBuyZCBCall extends ethereum.Call {
  get inputs(): MarketBuyZCBCall__Inputs {
    return new MarketBuyZCBCall__Inputs(this);
  }

  get outputs(): MarketBuyZCBCall__Outputs {
    return new MarketBuyZCBCall__Outputs(this);
  }
}

export class MarketBuyZCBCall__Inputs {
  _call: MarketBuyZCBCall;

  constructor(call: MarketBuyZCBCall) {
    this._call = call;
  }

  get _amountZCB(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _minMaturityConversionRate(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _minCumulativeMaturityConversionRate(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _maxIterations(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get _useInternalBalances(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }
}

export class MarketBuyZCBCall__Outputs {
  _call: MarketBuyZCBCall;

  constructor(call: MarketBuyZCBCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get value1(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }
}

export class MarketSellZCBCall extends ethereum.Call {
  get inputs(): MarketSellZCBCall__Inputs {
    return new MarketSellZCBCall__Inputs(this);
  }

  get outputs(): MarketSellZCBCall__Outputs {
    return new MarketSellZCBCall__Outputs(this);
  }
}

export class MarketSellZCBCall__Inputs {
  _call: MarketSellZCBCall;

  constructor(call: MarketSellZCBCall) {
    this._call = call;
  }

  get _amountZCB(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _maxMaturityConversionRate(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _maxCumulativeMaturityConversionRate(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _maxIterations(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get _useInternalBalances(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }
}

export class MarketSellZCBCall__Outputs {
  _call: MarketSellZCBCall;

  constructor(call: MarketSellZCBCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get value1(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }
}

export class MarketSellZCBtoUCall extends ethereum.Call {
  get inputs(): MarketSellZCBtoUCall__Inputs {
    return new MarketSellZCBtoUCall__Inputs(this);
  }

  get outputs(): MarketSellZCBtoUCall__Outputs {
    return new MarketSellZCBtoUCall__Outputs(this);
  }
}

export class MarketSellZCBtoUCall__Inputs {
  _call: MarketSellZCBtoUCall;

  constructor(call: MarketSellZCBtoUCall) {
    this._call = call;
  }

  get _amountZCB(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _maxMaturityConversionRate(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _maxCumulativeMaturityConversionRate(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _maxIterations(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get _useInternalBalances(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }
}

export class MarketSellZCBtoUCall__Outputs {
  _call: MarketSellZCBtoUCall;

  constructor(call: MarketSellZCBtoUCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get value1(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }
}

export class MarketSellUnitYTtoUCall extends ethereum.Call {
  get inputs(): MarketSellUnitYTtoUCall__Inputs {
    return new MarketSellUnitYTtoUCall__Inputs(this);
  }

  get outputs(): MarketSellUnitYTtoUCall__Outputs {
    return new MarketSellUnitYTtoUCall__Outputs(this);
  }
}

export class MarketSellUnitYTtoUCall__Inputs {
  _call: MarketSellUnitYTtoUCall;

  constructor(call: MarketSellUnitYTtoUCall) {
    this._call = call;
  }

  get _unitAmountYT(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _minMaturityConversionRate(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _minCumulativeMaturityConversionRate(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _maxIterations(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get _useInternalBalances(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }
}

export class MarketSellUnitYTtoUCall__Outputs {
  _call: MarketSellUnitYTtoUCall;

  constructor(call: MarketSellUnitYTtoUCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get value1(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }
}

export class ForceClaimSubAccountRewardsCall extends ethereum.Call {
  get inputs(): ForceClaimSubAccountRewardsCall__Inputs {
    return new ForceClaimSubAccountRewardsCall__Inputs(this);
  }

  get outputs(): ForceClaimSubAccountRewardsCall__Outputs {
    return new ForceClaimSubAccountRewardsCall__Outputs(this);
  }
}

export class ForceClaimSubAccountRewardsCall__Inputs {
  _call: ForceClaimSubAccountRewardsCall;

  constructor(call: ForceClaimSubAccountRewardsCall) {
    this._call = call;
  }
}

export class ForceClaimSubAccountRewardsCall__Outputs {
  _call: ForceClaimSubAccountRewardsCall;

  constructor(call: ForceClaimSubAccountRewardsCall) {
    this._call = call;
  }
}

export class ForceRateDataUpdateCall extends ethereum.Call {
  get inputs(): ForceRateDataUpdateCall__Inputs {
    return new ForceRateDataUpdateCall__Inputs(this);
  }

  get outputs(): ForceRateDataUpdateCall__Outputs {
    return new ForceRateDataUpdateCall__Outputs(this);
  }
}

export class ForceRateDataUpdateCall__Inputs {
  _call: ForceRateDataUpdateCall;

  constructor(call: ForceRateDataUpdateCall) {
    this._call = call;
  }
}

export class ForceRateDataUpdateCall__Outputs {
  _call: ForceRateDataUpdateCall;

  constructor(call: ForceRateDataUpdateCall) {
    this._call = call;
  }
}

export class SetOracleMCRCall extends ethereum.Call {
  get inputs(): SetOracleMCRCall__Inputs {
    return new SetOracleMCRCall__Inputs(this);
  }

  get outputs(): SetOracleMCRCall__Outputs {
    return new SetOracleMCRCall__Outputs(this);
  }
}

export class SetOracleMCRCall__Inputs {
  _call: SetOracleMCRCall;

  constructor(call: SetOracleMCRCall) {
    this._call = call;
  }

  get _MCR(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetOracleMCRCall__Outputs {
  _call: SetOracleMCRCall;

  constructor(call: SetOracleMCRCall) {
    this._call = call;
  }
}

export class ClaimRevenueCall extends ethereum.Call {
  get inputs(): ClaimRevenueCall__Inputs {
    return new ClaimRevenueCall__Inputs(this);
  }

  get outputs(): ClaimRevenueCall__Outputs {
    return new ClaimRevenueCall__Outputs(this);
  }
}

export class ClaimRevenueCall__Inputs {
  _call: ClaimRevenueCall;

  constructor(call: ClaimRevenueCall) {
    this._call = call;
  }
}

export class ClaimRevenueCall__Outputs {
  _call: ClaimRevenueCall;

  constructor(call: ClaimRevenueCall) {
    this._call = call;
  }
}

export class SetMinimumOrderSizeCall extends ethereum.Call {
  get inputs(): SetMinimumOrderSizeCall__Inputs {
    return new SetMinimumOrderSizeCall__Inputs(this);
  }

  get outputs(): SetMinimumOrderSizeCall__Outputs {
    return new SetMinimumOrderSizeCall__Outputs(this);
  }
}

export class SetMinimumOrderSizeCall__Inputs {
  _call: SetMinimumOrderSizeCall;

  constructor(call: SetMinimumOrderSizeCall) {
    this._call = call;
  }

  get mode(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get _minimumOrderSize(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetMinimumOrderSizeCall__Outputs {
  _call: SetMinimumOrderSizeCall;

  constructor(call: SetMinimumOrderSizeCall) {
    this._call = call;
  }
}
